# Generated by Django 4.0.2 on 2022-02-04 08:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userId', models.CharField(max_length=30, verbose_name='아이디')),
                ('name', models.CharField(max_length=20, verbose_name='이름')),
                ('password', models.CharField(max_length=20, verbose_name='패스워드')),
                ('email', models.CharField(max_length=50, verbose_name='이메일')),
                ('nickName', models.CharField(max_length=30, verbose_name='닉네임')),
                ('gender', models.CharField(choices=[('여성', '여성'), ('남성', '남성')], max_length=10, verbose_name='성별')),
                ('age', models.IntegerField(verbose_name='나이')),
                ('imageUrl', models.ImageField(blank=True, null=True, upload_to='user_image')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.CharField(max_length=20, verbose_name='가수')),
                ('title', models.CharField(max_length=50, verbose_name='제목')),
                ('albumTitle', models.CharField(max_length=50, verbose_name='앨범 이름')),
                ('releaseDate', models.DateField(verbose_name='출시일')),
                ('lyrics', models.TextField(verbose_name='가사')),
                ('albumCoverUrl', models.ImageField(blank=True, null=True, upload_to='album_image')),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communityName', models.CharField(max_length=70, verbose_name='커뮤니티 이름')),
                ('createdDate', models.DateField(verbose_name='커뮤니티 생성일')),
                ('musicId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.music', verbose_name='음악 아이디')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='유저 아이디')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdDate', models.DateField(verbose_name='인증 날짜')),
                ('musicId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.music', verbose_name='음악 아이디')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='유저 아이디')),
            ],
        ),
    ]
